{"ast":null,"code":"import _slicedToArray from \"/Users/shs/Desktop/findseung2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/shs/Desktop/findseung2/src/components/Header.tsx\";\nimport React from \"react\";\nimport \"../css/Header.scss\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\"; // import Drawer from \"@material-ui/core/Drawer\";\n// import MenuItem from \"@material-ui/core/MenuItem\";\n// import IconButton from \"@material-ui/core/IconButton\";\n// import MenuIcon from \"@material-ui/icons/Menu\";\n// import { makeStyles } from \"@material-ui/core/styles\";\n// import Button from \"@material-ui/core/Button\";\n// import List from \"@material-ui/core/List\";\n// import Divider from \"@material-ui/core/Divider\";\n// import ListItem from \"@material-ui/core/ListItem\";\n// import ListItemIcon from \"@material-ui/core/ListItemIcon\";\n// import ListItemText from \"@material-ui/core/ListItemText\";\n// import InboxIcon from \"@material-ui/icons/MoveToInbox\";\n// import MailIcon from \"@material-ui/icons/Mail\";\n// 메뉴 목록\n\nconst MENU = [{\n  id: 0,\n  name: \"HOME\",\n  href: \"#home\"\n}, {\n  id: 1,\n  name: \"ABOUT\",\n  href: \"#about\"\n}, {\n  id: 2,\n  name: \"SKILLS\",\n  href: \"#skills\"\n}, {\n  id: 3,\n  name: \"PROJECTS\",\n  href: \"#projects\"\n}, {\n  id: 4,\n  name: \"CONTACT\",\n  href: \"#contact\"\n}]; // const useStyles = makeStyles({\n//   list: {\n//     width: 250\n//   },\n//   fullList: {\n//     width: \"auto\"\n//   }\n// });\n\nfunction isMobile() {\n  return /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);\n}\n\nfunction Header() {\n  const _React$useState = React.useState(0),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        value = _React$useState2[0],\n        setValue = _React$useState2[1]; // const classes = useStyles();\n  // const [state, setState] = React.useState({\n  //   top: false\n  // });\n\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  }; // 모바일인지 체크\n\n\n  let mobileCheck = null;\n\n  if (isMobile()) {\n    mobileCheck = true;\n  } else {\n    mobileCheck = false;\n  } // if (mobileCheck) {\n  //   type DrawerSide = \"top\";\n  //   const toggleDrawer = (side: DrawerSide, open: boolean) => (\n  //     event: React.KeyboardEvent | React.MouseEvent\n  //   ) => {\n  //     if (\n  //       event.type === \"keydown\" &&\n  //       ((event as React.KeyboardEvent).key === \"Tab\" ||\n  //         (event as React.KeyboardEvent).key === \"Shift\")\n  //     ) {\n  //       return;\n  //     }\n  //     setState({ ...state, [side]: open });\n  //   };\n  //   const fullList = (side: DrawerSide) => (\n  //     <div\n  //       role=\"presentation\"\n  //       onClick={toggleDrawer(side, false)}\n  //       onKeyDown={toggleDrawer(side, false)}\n  //     >\n  //       <List>\n  //         {MENU.map(menu => (\n  //           <a href={menu.href} className=\"under-display-none\">\n  //             <ListItem button key={menu.name}>\n  //               <ListItemText\n  //                 primary={menu.name}\n  //                 className=\"align-center font-color-deepgray\"\n  //               />\n  //             </ListItem>\n  //           </a>\n  //         ))}\n  //       </List>\n  //       <Divider />\n  //     </div>\n  //   );\n  //   return (\n  //     <div className=\"align-left\">\n  //       <AppBar position=\"fixed\">\n  //         <List className=\"background-color-white\">\n  //           <Button onClick={toggleDrawer(\"top\", true)}>\n  //             <MenuIcon />\n  //           </Button>\n  //           <Drawer\n  //             anchor=\"top\"\n  //             open={state.top}\n  //             onClose={toggleDrawer(\"top\", false)}\n  //           >\n  //             {fullList(\"top\")}\n  //           </Drawer>\n  //         </List>\n  //       </AppBar>\n  //     </div>\n  //   );\n  // }\n  // // 모바일 아닌 경우\n  // else {\n  //   return (\n  //     <div id=\"menu\">\n  //       <AppBar position=\"fixed\">\n  //         <Tabs\n  //           value={value}\n  //           onChange={handleChange}\n  //           indicatorColor=\"secondary\"\n  //           textColor=\"secondary\"\n  //           className=\"nav-background-color\"\n  //           centered\n  //         >\n  //           {MENU.map(menu => (\n  //             <Tab label={menu.name} href={menu.href} key={menu.id} />\n  //           ))}\n  //         </Tabs>\n  //       </AppBar>\n  //     </div>\n  //   );\n  // }\n\n\n  return React.createElement(\"div\", {\n    id: \"menu\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165\n    },\n    __self: this\n  }, React.createElement(AppBar, {\n    position: \"fixed\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166\n    },\n    __self: this\n  }, React.createElement(Tabs, {\n    value: value,\n    onChange: handleChange,\n    indicatorColor: \"secondary\",\n    textColor: \"secondary\",\n    className: \"nav-background-color\",\n    centered: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167\n    },\n    __self: this\n  }, MENU.map(menu => React.createElement(Tab, {\n    label: menu.name,\n    href: menu.href,\n    key: menu.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176\n    },\n    __self: this\n  })))));\n}\n\nexport default Header;","map":{"version":3,"sources":["/Users/shs/Desktop/findseung2/src/components/Header.tsx"],"names":["React","AppBar","Tabs","Tab","MENU","id","name","href","isMobile","test","navigator","userAgent","Header","useState","value","setValue","handleChange","event","newValue","mobileCheck","map","menu"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport \"../css/Header.scss\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\n\n// import Drawer from \"@material-ui/core/Drawer\";\n// import MenuItem from \"@material-ui/core/MenuItem\";\n// import IconButton from \"@material-ui/core/IconButton\";\n// import MenuIcon from \"@material-ui/icons/Menu\";\n\n// import { makeStyles } from \"@material-ui/core/styles\";\n// import Button from \"@material-ui/core/Button\";\n// import List from \"@material-ui/core/List\";\n// import Divider from \"@material-ui/core/Divider\";\n// import ListItem from \"@material-ui/core/ListItem\";\n// import ListItemIcon from \"@material-ui/core/ListItemIcon\";\n// import ListItemText from \"@material-ui/core/ListItemText\";\n// import InboxIcon from \"@material-ui/icons/MoveToInbox\";\n// import MailIcon from \"@material-ui/icons/Mail\";\n\n// 메뉴 목록\nconst MENU: { id: number; name: string; href: string }[] = [\n  {\n    id: 0,\n    name: \"HOME\",\n    href: \"#home\"\n  },\n  {\n    id: 1,\n    name: \"ABOUT\",\n    href: \"#about\"\n  },\n  {\n    id: 2,\n    name: \"SKILLS\",\n    href: \"#skills\"\n  },\n  {\n    id: 3,\n    name: \"PROJECTS\",\n    href: \"#projects\"\n  },\n  {\n    id: 4,\n    name: \"CONTACT\",\n    href: \"#contact\"\n  }\n];\n\n// const useStyles = makeStyles({\n//   list: {\n//     width: 250\n//   },\n//   fullList: {\n//     width: \"auto\"\n//   }\n// });\n\nfunction isMobile() {\n  return /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(\n    navigator.userAgent\n  );\n}\n\nfunction Header() {\n  const [value, setValue] = React.useState(0);\n  // const classes = useStyles();\n  // const [state, setState] = React.useState({\n  //   top: false\n  // });\n\n  const handleChange = (event: React.ChangeEvent<{}>, newValue: number) => {\n    setValue(newValue);\n  };\n\n  // 모바일인지 체크\n  let mobileCheck = null;\n  if (isMobile()) {\n    mobileCheck = true;\n  } else {\n    mobileCheck = false;\n  }\n\n  // if (mobileCheck) {\n  //   type DrawerSide = \"top\";\n  //   const toggleDrawer = (side: DrawerSide, open: boolean) => (\n  //     event: React.KeyboardEvent | React.MouseEvent\n  //   ) => {\n  //     if (\n  //       event.type === \"keydown\" &&\n  //       ((event as React.KeyboardEvent).key === \"Tab\" ||\n  //         (event as React.KeyboardEvent).key === \"Shift\")\n  //     ) {\n  //       return;\n  //     }\n\n  //     setState({ ...state, [side]: open });\n  //   };\n\n  //   const fullList = (side: DrawerSide) => (\n  //     <div\n  //       role=\"presentation\"\n  //       onClick={toggleDrawer(side, false)}\n  //       onKeyDown={toggleDrawer(side, false)}\n  //     >\n  //       <List>\n  //         {MENU.map(menu => (\n  //           <a href={menu.href} className=\"under-display-none\">\n  //             <ListItem button key={menu.name}>\n  //               <ListItemText\n  //                 primary={menu.name}\n  //                 className=\"align-center font-color-deepgray\"\n  //               />\n  //             </ListItem>\n  //           </a>\n  //         ))}\n  //       </List>\n  //       <Divider />\n  //     </div>\n  //   );\n\n  //   return (\n  //     <div className=\"align-left\">\n  //       <AppBar position=\"fixed\">\n  //         <List className=\"background-color-white\">\n  //           <Button onClick={toggleDrawer(\"top\", true)}>\n  //             <MenuIcon />\n  //           </Button>\n\n  //           <Drawer\n  //             anchor=\"top\"\n  //             open={state.top}\n  //             onClose={toggleDrawer(\"top\", false)}\n  //           >\n  //             {fullList(\"top\")}\n  //           </Drawer>\n  //         </List>\n  //       </AppBar>\n  //     </div>\n  //   );\n  // }\n  // // 모바일 아닌 경우\n  // else {\n  //   return (\n  //     <div id=\"menu\">\n  //       <AppBar position=\"fixed\">\n  //         <Tabs\n  //           value={value}\n  //           onChange={handleChange}\n  //           indicatorColor=\"secondary\"\n  //           textColor=\"secondary\"\n  //           className=\"nav-background-color\"\n  //           centered\n  //         >\n  //           {MENU.map(menu => (\n  //             <Tab label={menu.name} href={menu.href} key={menu.id} />\n  //           ))}\n  //         </Tabs>\n  //       </AppBar>\n  //     </div>\n  //   );\n  // }\n  return (\n    <div id=\"menu\">\n      <AppBar position=\"fixed\">\n        <Tabs\n          value={value}\n          onChange={handleChange}\n          indicatorColor=\"secondary\"\n          textColor=\"secondary\"\n          className=\"nav-background-color\"\n          centered\n        >\n          {MENU.map(menu => (\n            <Tab label={menu.name} href={menu.href} key={menu.id} />\n          ))}\n        </Tabs>\n      </AppBar>\n    </div>\n  );\n}\n\nexport default Header;\n"]},"metadata":{},"sourceType":"module"}