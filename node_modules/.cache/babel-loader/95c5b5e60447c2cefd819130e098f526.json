{"ast":null,"code":"import _slicedToArray from \"/Users/shs/Desktop/findseung2/portfolio-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/shs/Desktop/findseung2/portfolio-app/src/components/Home.tsx\";\nimport React, { useState, useEffect } from \"react\";\nimport \"../css/Home.scss\";\nimport Grid from \"@material-ui/core/Grid\";\nconst app = new PIXI.Application();\ndocument.body.appendChild(app.view); // Get the texture for rope.\n\nconst starTexture = PIXI.Texture.from('examples/assets/star.png');\nconst starAmount = 1000;\nlet cameraZ = 0;\nconst fov = 20;\nconst baseSpeed = 0.025;\nlet speed = 0;\nlet warpSpeed = 0;\nconst starStretch = 5;\nconst starBaseSize = 0.05; // Create the stars\n\nconst stars = [];\n\nfor (let i = 0; i < starAmount; i++) {\n  const star = {\n    sprite: new PIXI.Sprite(starTexture),\n    z: 0,\n    x: 0,\n    y: 0\n  };\n  star.sprite.anchor.x = 0.5;\n  star.sprite.anchor.y = 0.7;\n  randomizeStar(star, true);\n  app.stage.addChild(star.sprite);\n  stars.push(star);\n}\n\nfunction randomizeStar(star, initial) {\n  star.z = initial ? Math.random() * 2000 : cameraZ + Math.random() * 1000 + 2000; // Calculate star positions with radial random coordinate so no star hits the camera.\n\n  const deg = Math.random() * Math.PI * 2;\n  const distance = Math.random() * 50 + 1;\n  star.x = Math.cos(deg) * distance;\n  star.y = Math.sin(deg) * distance;\n} // Change flight speed every 5 seconds\n\n\nsetInterval(() => {\n  warpSpeed = warpSpeed > 0 ? 0 : 1;\n}, 5000); // Listen for animate update\n\napp.ticker.add(delta => {\n  // Simple easing. This should be changed to proper easing function when used for real.\n  speed += (warpSpeed - speed) / 20;\n  cameraZ += delta * 10 * (speed + baseSpeed);\n\n  for (let i = 0; i < starAmount; i++) {\n    const star = stars[i];\n    if (star.z < cameraZ) randomizeStar(star); // Map star 3d position to 2d with really simple projection\n\n    const z = star.z - cameraZ;\n    star.sprite.x = star.x * (fov / z) * app.renderer.screen.width + app.renderer.screen.width / 2;\n    star.sprite.y = star.y * (fov / z) * app.renderer.screen.width + app.renderer.screen.height / 2; // Calculate star scale & rotation.\n\n    const dxCenter = star.sprite.x - app.renderer.screen.width / 2;\n    const dyCenter = star.sprite.y - app.renderer.screen.height / 2;\n    const distanceCenter = Math.sqrt(dxCenter * dxCenter + dyCenter * dyCenter);\n    const distanceScale = Math.max(0, (2000 - z) / 2000);\n    star.sprite.scale.x = distanceScale * starBaseSize; // Star is looking towards center so that y axis is towards center.\n    // Scale the star depending on how fast we are moving, what the stretchfactor is and depending on how far away it is from the center.\n\n    star.sprite.scale.y = distanceScale * starBaseSize + distanceScale * speed * starStretch * distanceCenter / app.renderer.screen.width;\n    star.sprite.rotation = Math.atan2(dyCenter, dxCenter) + Math.PI / 2;\n  }\n});\n\nfunction Home() {\n  // const [homeTitle2] = useState(\"   Hello, I’m a JavaScript Developer.     \");\n  const _useState = useState(\"Hello, I’m Hyunseung Seok.\"),\n        _useState2 = _slicedToArray(_useState, 1),\n        homeTitle = _useState2[0];\n\n  const _useState3 = useState(\"I’m a JavaScript Developer.\"),\n        _useState4 = _slicedToArray(_useState3, 1),\n        homeTitle2 = _useState4[0]; // const [title, setTitle] = useState('');\n  // const [index, setIndex] = useState(0);\n  // const [state, setState] = useState(true);\n\n\n  useEffect(() => {//     setInterval(() => {\n    //         if(index === homeTitle.length+1){\n    //             setState(false);\n    //         }\n    //         else if(index === -1){\n    //             setState(true);\n    //         }\n    //         if(state){\n    //             setIndex(index + 1);\n    //             setTitle(title + homeTitle[index]);\n    //         }\n    //         else{\n    //             setIndex(index - 1);\n    //             setTitle(title.substr(0, index));\n    //         }\n    //     }, 1000)\n  });\n  return React.createElement(\"div\", {\n    id: \"home\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 12,\n    md: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"font-bold\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, \"Hello, I\\u2019m \", React.createElement(\"span\", {\n    className: \"font-color-pink\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, \"Hyunseung Seok\"), \".\"), React.createElement(\"div\", {\n    className: \"font-bold\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, \"JavaScript Developer.\"))));\n} // interface Props {}\n// interface State {\n//     title : string;\n// }\n// class Home extends React.Component<Props, State> {\n//     state: State = {\n//         title: \"\"\n//     };\n//     onChange = () : void => {\n//         setInterval(() => {\n//             if(index === HOMETEXT_len){\n//                 TEXTSTATE = false;\n//             }\n//             else if(index === -1){\n//                 TEXTSTATE = true;\n//                 index++;\n//             }\n//             if(TEXTSTATE){\n//                 home_text += HOMETEXT[index++];\n//             }\n//             else{\n//                 home_text = home_text.substr(0, --index);\n//             }\n//             this.setState({title : home_text});\n//         }, time)\n//     }\n//     render() {\n//         return (\n//             <div id=\"home\">\n//                 <span>{this.onChange}</span>\n//                 <span>{this.state.title}</span>\n//                 <div><button onClick={this.onChange}>button</button></div>\n//             </div>\n//         )\n//     }\n// }\n\n\nexport default Home;","map":{"version":3,"sources":["/Users/shs/Desktop/findseung2/portfolio-app/src/components/Home.tsx"],"names":["React","useState","useEffect","Grid","app","PIXI","Application","document","body","appendChild","view","starTexture","Texture","from","starAmount","cameraZ","fov","baseSpeed","speed","warpSpeed","starStretch","starBaseSize","stars","i","star","sprite","Sprite","z","x","y","anchor","randomizeStar","stage","addChild","push","initial","Math","random","deg","PI","distance","cos","sin","setInterval","ticker","add","delta","renderer","screen","width","height","dxCenter","dyCenter","distanceCenter","sqrt","distanceScale","max","scale","rotation","atan2","Home","homeTitle","homeTitle2"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"../css/Home.scss\";\nimport Grid from \"@material-ui/core/Grid\";\n\n\nconst app = new PIXI.Application();\ndocument.body.appendChild(app.view);\n\n// Get the texture for rope.\nconst starTexture = PIXI.Texture.from('examples/assets/star.png');\n\nconst starAmount = 1000;\nlet cameraZ = 0;\nconst fov = 20;\nconst baseSpeed = 0.025;\nlet speed = 0;\nlet warpSpeed = 0;\nconst starStretch = 5;\nconst starBaseSize = 0.05;\n\n\n// Create the stars\nconst stars = [];\nfor (let i = 0; i < starAmount; i++) {\n    const star = {\n        sprite: new PIXI.Sprite(starTexture),\n        z: 0,\n        x: 0,\n        y: 0,\n    };\n    star.sprite.anchor.x = 0.5;\n    star.sprite.anchor.y = 0.7;\n    randomizeStar(star, true);\n    app.stage.addChild(star.sprite);\n    stars.push(star);\n}\n\nfunction randomizeStar(star, initial) {\n    star.z = initial ? Math.random() * 2000 : cameraZ + Math.random() * 1000 + 2000;\n\n    // Calculate star positions with radial random coordinate so no star hits the camera.\n    const deg = Math.random() * Math.PI * 2;\n    const distance = Math.random() * 50 + 1;\n    star.x = Math.cos(deg) * distance;\n    star.y = Math.sin(deg) * distance;\n}\n\n// Change flight speed every 5 seconds\nsetInterval(() => {\n    warpSpeed = warpSpeed > 0 ? 0 : 1;\n}, 5000);\n\n// Listen for animate update\napp.ticker.add((delta) => {\n    // Simple easing. This should be changed to proper easing function when used for real.\n    speed += (warpSpeed - speed) / 20;\n    cameraZ += delta * 10 * (speed + baseSpeed);\n    for (let i = 0; i < starAmount; i++) {\n        const star = stars[i];\n        if (star.z < cameraZ) randomizeStar(star);\n\n        // Map star 3d position to 2d with really simple projection\n        const z = star.z - cameraZ;\n        star.sprite.x = star.x * (fov / z) * app.renderer.screen.width + app.renderer.screen.width / 2;\n        star.sprite.y = star.y * (fov / z) * app.renderer.screen.width + app.renderer.screen.height / 2;\n\n        // Calculate star scale & rotation.\n        const dxCenter = star.sprite.x - app.renderer.screen.width / 2;\n        const dyCenter = star.sprite.y - app.renderer.screen.height / 2;\n        const distanceCenter = Math.sqrt(dxCenter * dxCenter + dyCenter * dyCenter);\n        const distanceScale = Math.max(0, (2000 - z) / 2000);\n        star.sprite.scale.x = distanceScale * starBaseSize;\n        // Star is looking towards center so that y axis is towards center.\n        // Scale the star depending on how fast we are moving, what the stretchfactor is and depending on how far away it is from the center.\n        star.sprite.scale.y = distanceScale * starBaseSize + distanceScale * speed * starStretch * distanceCenter / app.renderer.screen.width;\n        star.sprite.rotation = Math.atan2(dyCenter, dxCenter) + Math.PI / 2;\n    }\n});\n\n\n\nfunction Home() {\n  // const [homeTitle2] = useState(\"   Hello, I’m a JavaScript Developer.     \");\n  const [homeTitle] = useState(\"Hello, I’m Hyunseung Seok.\");\n  const [homeTitle2] = useState(\"I’m a JavaScript Developer.\");\n  // const [title, setTitle] = useState('');\n  // const [index, setIndex] = useState(0);\n  // const [state, setState] = useState(true);\n\n  useEffect(() => {\n    //     setInterval(() => {\n    //         if(index === homeTitle.length+1){\n    //             setState(false);\n    //         }\n    //         else if(index === -1){\n    //             setState(true);\n    //         }\n    //         if(state){\n    //             setIndex(index + 1);\n    //             setTitle(title + homeTitle[index]);\n    //         }\n    //         else{\n    //             setIndex(index - 1);\n    //             setTitle(title.substr(0, index));\n    //         }\n    //     }, 1000)\n  });\n\n  return (\n    <div id=\"home\">\n      <Grid item xs={12} sm={12} md={12}>\n        <div className=\"title\">\n          <div className=\"font-bold\">Hello, I’m <span className=\"font-color-pink\">Hyunseung Seok</span>.</div>\n          <div className=\"font-bold\">JavaScript Developer.</div>\n        </div>\n      </Grid>\n    </div>\n  );\n}\n\n// interface Props {}\n// interface State {\n//     title : string;\n// }\n// class Home extends React.Component<Props, State> {\n//     state: State = {\n//         title: \"\"\n//     };\n\n//     onChange = () : void => {\n//         setInterval(() => {\n//             if(index === HOMETEXT_len){\n//                 TEXTSTATE = false;\n//             }\n//             else if(index === -1){\n//                 TEXTSTATE = true;\n//                 index++;\n//             }\n\n//             if(TEXTSTATE){\n//                 home_text += HOMETEXT[index++];\n//             }\n//             else{\n//                 home_text = home_text.substr(0, --index);\n//             }\n//             this.setState({title : home_text});\n//         }, time)\n\n//     }\n\n//     render() {\n//         return (\n//             <div id=\"home\">\n//                 <span>{this.onChange}</span>\n//                 <span>{this.state.title}</span>\n//                 <div><button onClick={this.onChange}>button</button></div>\n\n//             </div>\n//         )\n//     }\n// }\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}