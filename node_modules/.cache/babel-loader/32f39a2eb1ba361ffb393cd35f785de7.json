{"ast":null,"code":"/*!\n * @pixi/canvas-display - v5.2.0\n * Compiled Wed, 06 Nov 2019 02:32:43 UTC\n *\n * @pixi/canvas-display is licensed under the MIT License.\n * http://www.opensource.org/licenses/mit-license\n */\nimport { Container, DisplayObject } from '@pixi/display';\n/**\n * To be overridden by the subclass\n * @method _renderCanvas\n * @memberof PIXI.Container#\n * @protected\n * @param {PIXI.CanvasRenderer} renderer - The renderer\n */\n\nContainer.prototype._renderCanvas = function _renderCanvas(renderer) // eslint-disable-line no-unused-vars\n{// this is where content itself gets rendered...\n};\n/**\n * Renders the object using the Canvas renderer\n * @method renderCanvas\n * @memberof PIXI.Container#\n * @param {PIXI.CanvasRenderer} renderer - The renderer\n */\n\n\nContainer.prototype.renderCanvas = function renderCanvas(renderer) {\n  // if not visible or the alpha is 0 then no need to render this\n  if (!this.visible || this.worldAlpha <= 0 || !this.renderable) {\n    return;\n  }\n\n  if (this._mask) {\n    renderer.maskManager.pushMask(this._mask);\n  }\n\n  this._renderCanvas(renderer);\n\n  for (var i = 0, j = this.children.length; i < j; ++i) {\n    this.children[i].renderCanvas(renderer);\n  }\n\n  if (this._mask) {\n    renderer.maskManager.popMask(renderer);\n  }\n};\n/**\n * Renders the object using the Canvas renderer\n * @method renderCanvas\n * @memberof PIXI.Container#\n * @param {PIXI.CanvasRenderer} renderer - The renderer\n */\n\n\nDisplayObject.prototype.renderCanvas = function renderCanvas(renderer) // eslint-disable-line no-unused-vars\n{// OVERWRITE;\n};","map":{"version":3,"sources":["../src/Container.js","../src/DisplayObject.js"],"names":["let"],"mappings":";;;;;;;;;;;;;;;;AASA,SAAS,CAAC,SAAV,CAAoB,aAApB,GAAoC,SAAS,aAAT,CAAuB,QAAvB,EAA+B;AACnE,C;AAEC,CAHD;;;;;;;;;AAWA,SAAS,CAAC,SAAV,CAAoB,YAApB,GAAmC,SAAS,YAAT,CAAsB,QAAtB,EACnC;;AAEI,MAAI,CAAC,KAAK,OAAN,IAAiB,KAAK,UAAL,IAAmB,CAApC,IAAyC,CAAC,KAAK,UAAnD,EACA;AACI;AACH;;AAED,MAAI,KAAK,KAAT,EACA;AACI,IAAA,QAAQ,CAAC,WAAT,CAAqB,QAArB,CAA8B,KAAK,KAAnC;AACH;;AAED,OAAK,aAAL,CAAmB,QAAnB;;AACA,OAAKA,IAAI,CAAC,GAAG,CAARA,EAAW,CAAC,GAAG,KAAK,QAAL,CAAc,MAAlC,EAA0C,CAAC,GAAG,CAA9C,EAAiD,EAAE,CAAnD,EACA;AACI,SAAK,QAAL,CAAc,CAAd,EAAiB,YAAjB,CAA8B,QAA9B;AACH;;AAED,MAAI,KAAK,KAAT,EACA;AACI,IAAA,QAAQ,CAAC,WAAT,CAAqB,OAArB,CAA6B,QAA7B;AACH;AACJ,CAvBD;;;;;;;;;ACZA,aAAa,CAAC,SAAd,CAAwB,YAAxB,GAAuC,SAAS,YAAT,CAAsB,QAAtB,EAA8B;AACrE,C;AAEC,CAHD","sourcesContent":["import { Container } from '@pixi/display';\n\n/**\n * To be overridden by the subclass\n * @method _renderCanvas\n * @memberof PIXI.Container#\n * @protected\n * @param {PIXI.CanvasRenderer} renderer - The renderer\n */\nContainer.prototype._renderCanvas = function _renderCanvas(renderer) // eslint-disable-line no-unused-vars\n{\n    // this is where content itself gets rendered...\n};\n\n/**\n * Renders the object using the Canvas renderer\n * @method renderCanvas\n * @memberof PIXI.Container#\n * @param {PIXI.CanvasRenderer} renderer - The renderer\n */\nContainer.prototype.renderCanvas = function renderCanvas(renderer)\n{\n    // if not visible or the alpha is 0 then no need to render this\n    if (!this.visible || this.worldAlpha <= 0 || !this.renderable)\n    {\n        return;\n    }\n\n    if (this._mask)\n    {\n        renderer.maskManager.pushMask(this._mask);\n    }\n\n    this._renderCanvas(renderer);\n    for (let i = 0, j = this.children.length; i < j; ++i)\n    {\n        this.children[i].renderCanvas(renderer);\n    }\n\n    if (this._mask)\n    {\n        renderer.maskManager.popMask(renderer);\n    }\n};\n","import { DisplayObject } from '@pixi/display';\n\n/**\n * Renders the object using the Canvas renderer\n * @method renderCanvas\n * @memberof PIXI.Container#\n * @param {PIXI.CanvasRenderer} renderer - The renderer\n */\nDisplayObject.prototype.renderCanvas = function renderCanvas(renderer) // eslint-disable-line no-unused-vars\n{\n    // OVERWRITE;\n};\n"]},"metadata":{},"sourceType":"module"}